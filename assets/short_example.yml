# This is a YAML file, so all content must be configured per YAML specification.

# If you like YAML validators and have the VS Code "YAML" extension or similar, you can have the below line to use the (very imperfect and shifty) JSON Schema (not recommended for most users, it's overly restrictive, view PR #28 for details).
# yaml-language-server: $schema=grid.schema.json

# This short_example.yml file will generate 540 images in total. On a decent graphics card (eg RTX 30xx) with SD 1.5, expect 10-20 minutes to run.

# This key is required configuration of the grid itself.
grid:
    # Give a page title
    title: My Short Example Grid
    # Label the authorship, eg 'Created by mcmonkey for public educational usage'
    # This will be displayed on the bottom of the page.
    author: Created by YOUR NAME HERE for SOME REASON HERE
    # Give a page description
    # Descriptions are HTML, so you can use HTML, or to write raw symbols, use escape codes:  &lt; for <    &gt; for >    &amp; for &    &#58; for :
    description: >
                 This is to demonstrate the concept of how the infinite-axis grid system works.
                 This description here demonstrates multi-line YAML strings.
                 <br>It also shows that you can write <b>HTML</b> if you want to.
    # You can even customize css stylings of the page if you really want to:
    stylesheet: >
                h1 {
                    color: #0055ff;
                }
    # Optionally specify base parameters. If not set, it will use whatever parameters you have in the WebUI.
    # These can be overridden by an axis.
    params:
        steps: 20
        Sampler: euler
        seed: 1
        # You can specify custom width/height to rescale images to as parameters.
        # If you set eg 256x256, it will save significant file space.
        OutWidth: 256
        OutHeight: 256
    # Can specify the format as either 'jpg' or 'png'
    # jpg makes smaller file sizes, with slightly lower quality
    # png makes bigger file sizes, at better quality
    format: jpg
    # You can add this key and set to 'true' to have invalid entries automatically skipped.
    skip_invalid: false
    # Optionally, also specify default choices for the webpage.
    show descriptions: true
    autoscale: false
    sticky: false
    x axis: sampler
    y axis: steps
    x super axis: 'None'
    y super axis: 'None'

# "axes" is the root key of the list of axes
axes:
    # Key names are used to organize the file, both here in YAML and in the output format.
    # So, use either very simple names, or numbers.
    sampler:
        # Title your axis.
        title: Sampler
        # Add any description text you want.
        description: Different samplers can produce slightly different output.
        # "values" is where the options go
        values:
            # Same rule as axis key labeling: keep it simple.
            euler_a:
                # As usual, title and optional description.
                title: Euler A
                description: Euler Ancestral is like Euler, but with <b>ancestral</b> stuff.
                # You can configure multiple parameter settings arbitrarily here.
                params:
                    # View the readme for accepted parameter types and formats.
                    Sampler: euler a
                    batch size: 12
            euler:
                title: Euler
                description: Good ol k_euler.
                params:
                    Sampler: Euler
                    batch size: 11
            ddim:
                title: DDIM
                description: The original.
                params:
                    Sampler: ddim
    steps:
        title: Steps
        description: How many times to run the sampler.
        # You can set which value is selected by default. Note that the '20' here corresponds to the '20:' key label on the value below.
        default: 20
        values:
            10:
                title: 10
                description: Ten times.
                params:
                    Steps: 10
            secret_option:
                title: Secret Option
                description: The hidden secret option!
                # You can set 'skip: true' to not generate images for a value option
                skip: true
                # You can also set 'show: false' to default hide it from the page (can be shown again with the advanced options box)
                show: false
                params:
                    steps: 150
            # You can be lazy too. This will set param 'steps' to '15' and set title to '15'.
            15: steps=15
            20: steps=20
    cfgscale:
        title: CFG Scale
        default: 7
        values:
            3: CFG scale=3
            5: CFG scale=5
            7: CFG scale=7
            9: CFG scale=9
            11: CFG scale=11
    # You can be extremely lazy if you want. This one line adds an axis titled 'seed', changing parameter 'seed' to value '1', '2', and '3'
    # You can alternately write "seed: 1 || 2 || 3" using the two-pipe notation to allow you to include commas inside values (for things like prompt keys)
    seed: 1, 2, 3
    # And of course you can mix the shorthands and longhands freely
    prompt:
        title: Prompt
        values:
            cat:
                title: Cat
                params:
                    prompt: A professional portrait of a cat in a location
            dog:
                title: Dog
                params:
                    prompt: A photograph of a dog running in a location
    promptreplaceexample:
        title: Prompt Replacements
        values:
            field: PromptReplace= location = field
            outer_space: PromptReplace= location = distant planet deep in outer space
    # Note that if you wanted to shorten prompt replace, it would look like:
    # promptreplace: location = field, location = distant planet deep in outer space
